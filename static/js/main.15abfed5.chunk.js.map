{"version":3,"sources":["gameHelpers.js","img/bg.png","components/styles/StyledTetris.js","tetrominos.js","hooks/useStage.js","components/styles/StyledStage.js","components/styles/StyledCell.js","components/Cell.js","components/Stage.js","components/styles/StyledDisplay.js","components/Display.js","components/styles/StyledStartButton.js","components/StartButton.js","components/Tetris.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","serviceWorker.js","index.js"],"names":["createStage","Array","from","fill","checkCollision","player","stage","moveX","x","moveY","y","tetromino","length","pos","StyledTetrisWrapper","styled","div","bgImage","StyledTetris","TETROMINOS","0","shape","color","I","J","L","O","S","T","Z","randomTetromino","tetrominos","randTetromino","Math","floor","random","useStage","resetPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","updateStage","prevStage","newStage","map","row","cell","forEach","value","collided","reduce","ack","findIndex","prev","unshift","push","sweepRows","StyledStage","props","height","width","StyledCell","type","Cell","React","memo","Stage","console","log","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","Tetris","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","rotatedTetro","_","index","col","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","move","keyCode","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","onKeyUp","App","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15abfed5.chunk.js","sourcesContent":["export const STAGE_WIDTH = 12\nexport const STAGE_HEIGHT = 20\n\nexport const createStage = () =>\n  Array.from(Array(STAGE_HEIGHT), () => new Array(STAGE_WIDTH).fill([0, 'clear']))\n\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.tetromino.length; y += 1) {\n    for (let x = 0; x < player.tetromino[0].length; x += 1) {\n      if (player.tetromino[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !== 'clear'\n        ) {\n          return true\n        }\n      }\n    }\n  }\n}\n","export default __webpack_public_path__ + \"static/media/bg.d63cfd51.png\";","import styled from \"styled-components\"\nimport bgImage from \"../../img/bg.png\"\n\nexport const StyledTetrisWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: url(${bgImage}) #000;\n  background-size: cover;\n  overflow: hidden;\n`\n\nexport const StyledTetris = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n\n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`\n","export const TETROMINOS = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n    shape: [[0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0], [0, 'I', 0, 0]],\n    color: '80, 227, 230'\n  },\n  J: {\n    shape: [[0, 'J', 0], [0, 'J', 0], ['J', 'J', 0]],\n    color: '36, 95, 223'\n  },\n  L: {\n    shape: [[0, 'L', 0], [0, 'L', 0], [0, 'L', 'L']],\n    color: '223, 173, 36'\n  },\n  O: {\n    shape: [['O', 'O'], ['O', 'O']],\n    color: '223, 217, 36'\n  },\n  S: {\n    shape: [[0, 'S', 'S'], ['S', 'S', 0], [0, 0, 0]],\n    color: '48, 211, 56'\n  },\n  T: {\n    shape: [[0, 0, 0], ['T', 'T', 'T'], [0, 'T', 0]],\n    color: '132, 61, 198'\n  },\n  Z: {\n    shape: [['Z', 'Z', 0], [0, 'Z', 'Z'], [0, 0, 0]],\n    color: '227, 78, 78'\n  }\n}\n\nexport const randomTetromino = () => {\n  const tetrominos = 'IJLOSTZ'\n  const randTetromino = tetrominos[Math.floor(Math.random() * tetrominos.length)]\n\n  return TETROMINOS[randTetromino]\n}\n","import { useState, useEffect } from 'react'\nimport { createStage } from '../gameHelpers'\n\nexport const useStage = (player, resetPlayer) => {\n  const [stage, setStage] = useState(createStage())\n  const [rowsCleared, setRowsCleared] = useState(0)\n\n  useEffect(() => {\n    setRowsCleared(0)\n\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1)\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']))\n          return ack\n        }\n        ack.push(row)\n        return ack\n      }, [])\n\n    const updateStage = prevStage => {\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      )\n\n      player.tetromino.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`\n            ]\n          }\n        })\n      })\n\n      if (player.collided) {\n        resetPlayer()\n        return sweepRows(newStage)\n      }\n\n      return newStage\n    }\n\n    setStage(prev => updateStage(prev))\n  }, [player, resetPlayer])\n\n  return [stage, setStage, rowsCleared]\n}\n","import styled from \"styled-components\"\n\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`\n","import styled from \"styled-components\"\n\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? \"0px solid\" : \"4px solid\")};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-right-color: rgba(${props => props.color}, 1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n`\n","import React from \"react\"\nimport { StyledCell } from \"./styles/StyledCell\"\nimport { TETROMINOS } from \"../tetrominos\"\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={TETROMINOS[type].color} />\n)\n\nexport default React.memo(Cell)\n","import React from 'react'\nimport { StyledStage } from './styles/StyledStage'\n\nimport Cell from './Cell'\n\nconst Stage = ({ stage }) => {\n  console.log(stage)\n  return (\n    <StyledStage width={stage[0].length} height={stage.length}>\n      {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n  )\n}\n\nexport default Stage\n","import styled from \"styled-components\"\n\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? \"red\" : \"#999\")};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`\n","import React from \"react\"\nimport { StyledDisplay } from \"./styles/StyledDisplay\"\n\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n)\n\nexport default Display\n","import styled from \"styled-components\"\n\nexport const StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`\n","import React from \"react\"\nimport { StyledStartButton } from \"./styles/StyledStartButton\"\n\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n)\n\nexport default StartButton\n","import React, { useState } from 'react'\n\nimport { createStage, checkCollision } from '../gameHelpers'\n\n// Styled components\nimport { StyledTetrisWrapper, StyledTetris } from './styles/StyledTetris'\n\n// Custom hooks\nimport { usePlayer } from '../hooks/usePlayer'\nimport { useStage } from '../hooks/useStage'\nimport { useInterval } from '../hooks/useInterval'\nimport { useGameStatus } from '../hooks/useGameStatus'\n\nimport Stage from './Stage'\nimport Display from './Display'\nimport StartButton from './StartButton'\n\nconst Tetris = () => {\n  const [dropTime, setDropTime] = useState(null)\n  const [gameOver, setGameOver] = useState(false)\n  const [player, updatePlayerPos, resetPlayer, playerRotate] = usePlayer()\n  const [stage, setStage, rowsCleared] = useStage(player, resetPlayer)\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(rowsCleared)\n\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 })\n    }\n  }\n\n  const startGame = () => {\n    // Reset everything\n    setStage(createStage())\n    setDropTime(1000)\n    resetPlayer()\n    setGameOver(false)\n    setScore(0)\n    setRows(0)\n    setLevel(0)\n  }\n\n  const drop = () => {\n    // increase level when player has cleared 10 rows\n\n    if (rows > (level + 1) * 10) {\n      setLevel(prev => prev + 1)\n      // increase speed\n      setDropTime(1000 / (level + 1) + 200)\n    }\n\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false })\n    } else {\n      if (player.pos.y < 1) {\n        setGameOver(true)\n        setDropTime(null)\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true })\n    }\n  }\n\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1) + 200)\n      }\n    }\n  }\n\n  const dropPlayer = () => {\n    setDropTime(null)\n    drop()\n  }\n\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1)\n      } else if (keyCode === 39) {\n        movePlayer(1)\n      } else if (keyCode === 40) {\n        dropPlayer()\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1)\n      }\n    }\n  }\n\n  useInterval(() => {\n    drop()\n  }, dropTime)\n\n  return (\n    <StyledTetrisWrapper role='button' tabIndex='0' onKeyDown={e => move(e)} onKeyUp={keyUp}>\n      <StyledTetris>\n        <Stage stage={stage} />\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text='Game Over' />\n          ) : (\n            <div>\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows: ${rows}`} />\n              <Display text={`Level: ${level}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledTetris>\n    </StyledTetrisWrapper>\n  )\n}\n\nexport default Tetris\n","import { useState, useCallback } from 'react'\n\nimport { TETROMINOS, randomTetromino } from '../tetrominos'\nimport { STAGE_WIDTH, STAGE_HEIGHT, checkCollision } from '../gameHelpers'\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    tetromino: randomTetromino().shape,\n    collided: false\n  })\n\n  const rotate = (matrix, dir) => {\n    const rotatedTetro = matrix.map((_, index) => matrix.map(col => col[index]))\n    if (dir > 0) {\n      return rotatedTetro.map(row => row.reverse())\n    }\n    return rotatedTetro.reverse()\n  }\n\n  const playerRotate = (stage, dir) => {\n    const clonedPlayer = JSON.parse(JSON.stringify(player))\n    clonedPlayer.tetromino = rotate(clonedPlayer.tetromino, dir)\n\n    const pos = clonedPlayer.pos.x\n    let offset = 1\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset\n      offset = -(offset + (offset > 0 ? 1 : -1))\n      if (offset > clonedPlayer.tetromino[0].length) {\n        rotate(clonedPlayer.tetromino, -dir)\n        clonedPlayer.pos.x = pos\n        return\n      }\n    }\n\n    setPlayer(clonedPlayer)\n  }\n\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided\n    }))\n  }\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      tetromino: randomTetromino().shape,\n      collided: false\n    })\n  }, [])\n\n  return [player, updatePlayerPos, resetPlayer, playerRotate]\n}\n","import { useState, useEffect, useCallback } from \"react\"\n\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0)\n  const [rows, setRows] = useState(0)\n  const [level, setLevel] = useState(0)\n\n  const linePoints = [40, 100, 300, 1200]\n\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1))\n      setRows(prev => prev + rowsCleared)\n    }\n  }, [level, linePoints, rowsCleared])\n\n  useEffect(() => {\n    calcScore()\n  }, [calcScore, rowsCleared, score])\n\n  return [score, setScore, rows, setRows, level, setLevel]\n}\n","import { useEffect, useRef } from 'react';\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import React from \"react\"\nimport Tetris from \"./components/Tetris\"\n\nconst App = () => (\n  <div className=\"App\">\n    <Tetris />\n  </div>\n)\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}